import os ;

# below feature rule come from http://www.boost.org/doc/tools/build/doc/html/bbv2/extending/features.html

path-constant TOP : . ;

variant strict : : ;

variant asan : debug : <cxxflags>-fsanitize=address <linkflags>-lasan <define>CXX_ENABLE_ASAN ;

project ppocr
    : requirements
    <include>src
    <include>src/ocr

    <cxxflags>-std=c++11
#     <cxxflags>-Weffc++
#     <cxxflags>-Wswitch-enum
#     <cxxflags>-Wswitch-default
    <cxxflags>-pedantic
#    <cxxflags>-Wconversion
    <cxxflags>-Wvla
    <cxxflags>-Wstrict-aliasing=2
    <cxxflags>-Wold-style-cast
#    <cxxflags>-Wlong-long
    <cxxflags>-O3
    <variant>debug:<cxxflags>-g
#     <variant>release:<cxxflags>-march=native
#     <variant>release:<linkflags>-flto

    <cxxflags>-Wuninitialized
    <cxxflags>-Wnon-virtual-dtor
    <cxxflags>-Wall
    <cxxflags>-Wextra
    <cxxflags>-Wno-unused-parameter
    <cxxflags>-Wno-long-long
    <cxxflags>-Wtype-limits
    <cxxflags>-Wundef
    <cxxflags>-Wcast-align
    <cxxflags>-Wchar-subscripts
#     <cxxflags>-Wformat
    <cxxflags>-Wformat=2
    <cxxflags>-Wformat-security
#     <cxxflags>-Wmissing-format-attribute
    <cxxflags>-Wsequence-point
    <cxxflags>-Wreturn-type
    <cxxflags>-Wfloat-equal
#     <cxxflags>-Wshadow
    <cxxflags>-Wpointer-arith
    <cxxflags>-Wsign-compare
#     <cxxflags>-Wmissing-declarations
    <cxxflags>-Wpacked
    <cxxflags>-Wredundant-decls
#     <cxxflags>-Winline
    <cxxflags>-Winit-self
    <cxxflags>-Wcast-qual
    <cxxflags>-Woverloaded-virtual
    <cxxflags>-Wunused-variable
#     <cxxflags>-Wunused-parameter
    <cxxflags>-Wmissing-include-dirs
    <cxxflags>-Wunused
    <cxxflags>-Wendif-labels
    <cxxflags>-Wwrite-strings
#     <cxxflags>-Wpadded
    <cxxflags>-Wstrict-overflow=1
#     <cxxflags>-Wstrict-overflow=5
    <cxxflags>-Wc++11-compat
    <cxxflags>-Wnarrowing
    <variant>strict:<cxxflags>-Wsign-conversion
    <cxxflags>-Wfloat-conversion
#     <cxxflags>-Wlogical-not-parentheses # gcc5
    <cxxflags>-Wvolatile-register-var
    <cxxflags>-Wdisabled-optimization
    <cxxflags>-Woverlength-strings
    <cxxflags>-Warray-bounds


#     <toolset>clang:<cxxflags>-Weverything
#     <toolset>clang:<cxxflags>-Wno-c++98-compat
    <toolset>clang:<cxxflags>-Wno-mismatched-tags
#    <toolset>clang:<cxxflags>-Wno-overloaded-virtual
    <toolset>clang:<cxxflags>-Wno-char-subscripts
    <toolset>clang:<cxxflags>-Wno-unused-variable
#     <toolset>clang:<cxxflags>-Wno-unused-private-field

#     <toolset>gcc:<cxxflags>-Warray-bounds=2 # gcc5
#     <toolset>gcc:<cxxflags>-Wbool-compare # gcc5
    <toolset>gcc:<cxxflags>-Wunused-but-set-parameter
    <toolset>gcc:<cxxflags>-Wunused-but-set-variable
#     <toolset>gcc:<cxxflags>-Wparenthese # gcc5
#     <toolset>gcc:<cxxflags>-Wsequence-points # gcc5
#     <toolset>gcc:<cxxflags>-Wsuggest-attribute=pure
#     <toolset>gcc:<cxxflags>-Wsuggest-attribute=const
    <toolset>gcc:<cxxflags>-Wsuggest-attribute=noreturn
#     <toolset>gcc:<cxxflags>-Wsuggest-final-types # gcc5
#     <toolset>gcc:<cxxflags>-Wsuggest-final-methods # gcc5
#     <toolset>gcc:<cxxflags>-Wsuggest-override # gcc5
    <toolset>gcc:<cxxflags>-Wconditionally-supported
    <toolset>gcc:<cxxflags>-Wzero-as-null-pointer-constant
    <toolset>gcc:<cxxflags>-Wuseless-cast
    <toolset>gcc:<cxxflags>-Wlogical-op
#     <toolset>gcc:<cxxflags>-Wno-aggressive-loop-optimizations
    <toolset>gcc:<cxxflags>-Wnormalized=nfc #disable ?
#     <toolset>gcc:<cxxflags>-fsized-deallocation # gcc5
#     <toolset>gcc:<cxxflags>-flto-odr-type-merging # gcc5
#     <toolset>gcc:<cxxflags>-Wno-odr # gcc5 #  Requires -flto-odr-type-merging to be enabled
    <toolset>gcc:<cxxflags>-Wvector-operation-performance
    <toolset>gcc:<cxxflags>-Wopenmp-simd
    <toolset>gcc:<cxxflags>-Wdouble-promotion
    <toolset>gcc:<cxxflags>-Wmaybe-uninitialized

#     <define>_FILE_OFFSET_BITS=64
#     <define>_LARGEFILE64_SOURCE
#
#     <define>__STDC_FORMAT_MACROS

    : default-build release
;

#lib libboost_unit_test : : <name>boost_unit_test_framework-mt <link>shared ;
lib libboost_unit_test : : <name>boost_unit_test_framework <link>shared ;

#lib dl : : <name>dl <link>shared ;
#lib pthread : : <name>pthread <link>shared ;

obj coordinate      : src/image/coordinate.cpp ;
obj box             : src/box_char/box.cpp ;
obj image           : src/image/image.cpp ;
obj image_from_file : src/image/image_from_file.cpp ;
obj image_from_string : src/image/image_from_string.cpp ;
obj definition      : src/factory/definition.cpp ;
obj read_def_file_and_normalize : src/utils/read_definitions_file_and_normalize.cpp ;
obj dictionary      : src/spell/dictionary.cpp ;

alias strategies_src :
    src/strategies/agravity.cpp
    src/strategies/alternation.cpp
    src/strategies/compass.cpp
    src/strategies/dcompass.cpp
    src/strategies/density.cpp
    src/strategies/direction.cpp
    src/strategies/dvdirection2.cpp
    src/strategies/dvdirection.cpp
    src/strategies/dvgravity2.cpp
    src/strategies/dvgravity.cpp
    src/strategies/dzdensity.cpp
    src/strategies/gravity2.cpp
    src/strategies/gravity.cpp
    src/strategies/hbar.cpp
    src/strategies/hdirection2.cpp
    src/strategies/hdirection.cpp
    src/strategies/hgravity2.cpp
    src/strategies/hgravity.cpp
    src/strategies/zone.cpp
    src/strategies/proportionality.cpp
    src/strategies/proportionality_zone.cpp
    src/strategies/utils/basic_proportionality.cpp
;

alias filter_src :
    src/filters/line.cpp
;

alias image_src :
    src/image/coordinate.cpp
    src/image/image.cpp
;

alias factory_src :
    image_src
    src/factory/data_loader.cpp
    src/factory/definition.cpp
;

alias registry_src :
    factory_src
    strategies_src
    src/factory/registry.cpp
;

alias image_from_file_src :
    image_src
    src/image/image_from_file.cpp
;

alias box_character_src :
    src/box_char/box.cpp
    src/box_char/make_box_character.cpp
;

alias extract_data_src :
    image_src
    registry_src
    box_character_src
    image_from_file_src
;

#exe test_image : tests/test_image.cpp src/image/image.cpp src/image/image_from_file.cpp libboost_unit_test : ;

exe extract_text2 :
    src/extract_text2.cpp
    src/utils/image_compare.cpp
    extract_data_src
    filter_src
: ;

exe extract_text3 :
    src/extract_text3.cpp
    src/utils/image_compare.cpp
    extract_data_src
: ;

exe extract_text4 :
    src/extract_text4.cpp
    src/utils/image_compare.cpp
    extract_data_src
    dictionary
: ;

exe extract_text5 :
    src/extract_text5.cpp
    src/utils/image_compare.cpp
    extract_data_src
: ;

exe learning2 :
    src/learning2.cpp
    extract_data_src
: ;

exe show_stats :
    src/show_stats.cpp
    registry_src
: ;

exe graphic_datas :
    src/graphic_datas.cpp
    registry_src
: ;

exe stat_definitions :
    src/stat_definitions.cpp
    registry_src
    read_def_file_and_normalize
: ;

exe tree :
    src/tree.cpp
    registry_src
    read_def_file_and_normalize
: ;

exe normalize_learning :
    src/normalize_learning.cpp
    src/utils/unique_sort_definition.cpp
    src/utils/image_compare.cpp
    registry_src
    image_src
: ;

exe make_trie_dictionary :
    src/make_trie_dictionary.cpp
    dictionary
: ;

#
# Unit Tests
#

import testing ;

alias image_from_string_src :
    src/image/image.cpp
    src/image/image_from_string.cpp
;

unit-test test_image :
    tests/test_image.cpp
    src/image/image.cpp
    src/image/image_from_file.cpp
    libboost_unit_test : ;

unit-test test_line :
    image image_from_string definition coordinate box
    src/factory/data_loader.cpp
    tests/test_line.cpp
    src/filters/line.cpp
    libboost_unit_test : ;

unit-test test_make_box_character :
    tests/test_make_box_character.cpp
    src/box_char/make_box_character.cpp
    src/image/image.cpp src/image/image_from_file.cpp
    libboost_unit_test : ;

unit-test test_gravity :
    tests/strategies/test_gravity.cpp
    src/strategies/gravity.cpp
    image_from_string_src
    libboost_unit_test : ;

unit-test test_gravity2 :
    tests/strategies/test_gravity2.cpp
    src/strategies/gravity2.cpp
    image_from_string_src
    libboost_unit_test : ;

unit-test test_proportionality :
    tests/strategies/test_proportionality.cpp
    src/strategies/proportionality.cpp
    image_from_string_src
    src/strategies/utils/basic_proportionality.cpp
    libboost_unit_test : ;


unit-test test_agravity :
    tests/strategies/test_agravity.cpp
    src/strategies/agravity.cpp
    image_from_string_src
    libboost_unit_test : ;

unit-test test_alternation :
    tests/strategies/test_alternation.cpp
    src/strategies/alternation.cpp
    image_from_string_src
    libboost_unit_test : ;

unit-test test_dcompass :
    tests/strategies/test_dcompass.cpp
    src/strategies/dcompass.cpp
    image_from_string_src
    libboost_unit_test : ;

unit-test test_direction :
    tests/strategies/test_direction.cpp
    src/strategies/direction.cpp
    image_from_string_src
    libboost_unit_test : ;

unit-test test_hbar :
    tests/strategies/test_hbar.cpp
    src/strategies/hbar.cpp
    image_from_string_src
    src/strategies/utils/basic_proportionality.cpp
    libboost_unit_test : ;

unit-test test_hdirection :
    tests/strategies/test_hdirection.cpp
    src/strategies/hdirection.cpp
    image_from_string_src
    src/strategies/utils/basic_proportionality.cpp
    libboost_unit_test : ;

unit-test test_hdirection2 :
    tests/strategies/test_hdirection2.cpp
    src/strategies/hdirection2.cpp
    image_from_string_src
    src/strategies/utils/basic_proportionality.cpp
    libboost_unit_test : ;

unit-test test_hgravity :
    tests/strategies/test_hgravity.cpp
    src/strategies/hgravity.cpp
    image_from_string_src
    src/strategies/utils/basic_proportionality.cpp
    libboost_unit_test : ;

unit-test test_hgravity2 :
    tests/strategies/test_hgravity2.cpp
    src/strategies/hgravity2.cpp
    image_from_string_src
    src/strategies/utils/basic_proportionality.cpp
    libboost_unit_test : ;

unit-test test_zone :
    tests/strategies/test_zone.cpp
    src/strategies/zone.cpp
    image_from_string_src
    src/strategies/utils/basic_proportionality.cpp
    libboost_unit_test : ;

unit-test test_trie :
    tests/container/test_trie.cpp
    libboost_unit_test : ;

unit-test test_word_disambiguouser :
    tests/spell/test_word_disambiguouser.cpp
    dictionary
    libboost_unit_test : ;

#unit-test test_new_ocr : tests/test_test_new_ocr.cpp cryptofile libboost_unit_test png acodec aformat avutil swscale openssl crypto snappy pthread dl z ocr : ;

