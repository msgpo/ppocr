include cxxflags.jam ;

project ppocr
    : requirements
    <include>src
    <include>includes

    <cxxflags>-std=c++11
    $(CXXFLAGS)
    <cxxflags>-frtti
    <define>IMAGE_PATH='\"./tests/images/\"'

    : default-build release
;


## Lib {

#lib libboost_unit_test : : <name>boost_unit_test_framework-mt <link>shared ;
lib libboost_unit_test : : <name>boost_unit_test_framework <link>shared ;

## }

## Alias {

obj coordinate      : src/ppocr/image/coordinate.cpp ;
obj box             : src/ppocr/box_char/box.cpp ;
obj image           : src/ppocr/image/image.cpp ;
obj image_from_file : src/ppocr/image/image_from_file.cpp ;
obj image_from_string : src/ppocr/image/image_from_string.cpp ;
obj dictionary      : src/ppocr/spell/dictionary.cpp ;
obj glyphs_loader   : src/ppocr/loader2/glyphs_loader.cpp ;
obj image_compare   : src/ppocr/utils/image_compare.cpp ;
obj loader2_image_io : src/ppocr/loader2/image_io.cpp ;

alias strategies_src :
    src/ppocr/strategies/agravity.cpp
    src/ppocr/strategies/alternation.cpp
    src/ppocr/strategies/compass.cpp
    src/ppocr/strategies/dcompass.cpp
    src/ppocr/strategies/density.cpp
    src/ppocr/strategies/direction.cpp
    src/ppocr/strategies/dvdirection2.cpp
    src/ppocr/strategies/dvdirection.cpp
    src/ppocr/strategies/dvgravity2.cpp
    src/ppocr/strategies/dvgravity.cpp
    src/ppocr/strategies/dzdensity.cpp
    src/ppocr/strategies/gravity2.cpp
    src/ppocr/strategies/gravity.cpp
    src/ppocr/strategies/hbar.cpp
    src/ppocr/strategies/hdirection2.cpp
    src/ppocr/strategies/hdirection.cpp
    src/ppocr/strategies/hgravity2.cpp
    src/ppocr/strategies/hgravity.cpp
    src/ppocr/strategies/zone.cpp
    src/ppocr/strategies/proportionality.cpp
    src/ppocr/strategies/proportionality_zone.cpp
    src/ppocr/strategies/utils/basic_proportionality.cpp
;

alias image_src :
    src/ppocr/image/coordinate.cpp
    src/ppocr/image/image.cpp
;

alias image_from_file_src :
    image_src
    src/ppocr/image/image_from_file.cpp
;

alias box_character_src :
    src/ppocr/box_char/box.cpp
    src/ppocr/box_char/make_box_character.cpp
;

## }

## Exe {

exe make_trie_dictionary :
    src/ppocr/make_trie_dictionary.cpp
    dictionary
: ;


exe write_glyphs :
    src/ppocr/write_glyphs.cpp
    loader2_image_io
    glyphs_loader
    image_src
    box_character_src
    image_from_file_src
: ;

exe show_glyphs :
    src/ppocr/show_glyphs.cpp
    image_src
    box_character_src
    image_from_file_src
: ;

exe normalize_glyphs :
    src/ppocr/normalize_glyphs.cpp
    loader2_image_io
    glyphs_loader
    image_src
    image_compare
    box_character_src
    image_from_file_src
: ;

exe write_datas :
    src/ppocr/write_datas.cpp
    loader2_image_io
    strategies_src
    image_src
    box_character_src
    image_from_file_src
: ;

exe write_datas2 :
    src/ppocr/write_datas2.cpp
    loader2_image_io
    glyphs_loader
    strategies_src
    image_src
    image_compare
    box_character_src
    image_from_file_src
: ;

exe extract_text6 :
    src/ppocr/extract_text6.cpp
    image_compare
    glyphs_loader
    dictionary
    loader2_image_io
    strategies_src
    image_src
    box_character_src
    image_from_file_src
: ;

exe extract_text8 :
    src/ppocr/extract_text8.cpp
    image_compare
    glyphs_loader
    dictionary
    loader2_image_io
    strategies_src
    image_src
    box_character_src
    image_from_file_src
: ;

exe ocr2_extract_text :
    src/ppocr/ocr2_extract_text.cpp
    src/ppocr/ocr2/glyphs.cpp
    src/ppocr/ocr2/word_lines.cpp
    src/ppocr/ocr2/data_indexes_by_words.cpp
    src/ppocr/ocr2/filter_by_lines.cpp
    src/ppocr/ocr2/filter_by_font.cpp
    src/ppocr/ocr2/disambiguous_with_dict.cpp
    image_compare
    glyphs_loader
    dictionary
    loader2_image_io
    strategies_src
    image_src
    box_character_src
    image_from_file_src
: ;

## }


## Unit Tests {

import testing ;

alias image_from_string_src :
    src/ppocr/image/image.cpp
    src/ppocr/image/image_from_string.cpp
;

constant TEST_DEPENDENCIES :
    <library>libboost_unit_test
;

unit-test test_image :
    tests/test_image.cpp
    src/ppocr/image/image.cpp
    src/ppocr/image/image_from_file.cpp
: $(TEST_DEPENDENCIES) ;

unit-test test_make_box_character :
    tests/test_make_box_character.cpp
    src/ppocr/box_char/make_box_character.cpp
    src/ppocr/image/image.cpp
    src/ppocr/image/image_from_file.cpp
: $(TEST_DEPENDENCIES) ;

unit-test test_gravity :
    tests/strategies/test_gravity.cpp
    src/ppocr/strategies/gravity.cpp
    image_from_string_src
: $(TEST_DEPENDENCIES) ;

unit-test test_gravity2 :
    tests/strategies/test_gravity2.cpp
    src/ppocr/strategies/gravity2.cpp
    image_from_string_src
: $(TEST_DEPENDENCIES) ;

unit-test test_proportionality :
    tests/strategies/test_proportionality.cpp
    src/ppocr/strategies/proportionality.cpp
    image_from_string_src
    src/ppocr/strategies/utils/basic_proportionality.cpp
: $(TEST_DEPENDENCIES) ;

unit-test test_proportionality_zone :
    tests/strategies/test_proportionality_zone.cpp
    src/ppocr/strategies/proportionality_zone.cpp
    image_from_string_src
: $(TEST_DEPENDENCIES) ;


unit-test test_agravity :
    tests/strategies/test_agravity.cpp
    src/ppocr/strategies/agravity.cpp
    image_from_string_src
: $(TEST_DEPENDENCIES) ;

unit-test test_alternation :
    tests/strategies/test_alternation.cpp
    src/ppocr/strategies/alternation.cpp
    image_from_string_src
: $(TEST_DEPENDENCIES) ;

unit-test test_dcompass :
    tests/strategies/test_dcompass.cpp
    src/ppocr/strategies/dcompass.cpp
    image_from_string_src
: $(TEST_DEPENDENCIES) ;

unit-test test_direction :
    tests/strategies/test_direction.cpp
    src/ppocr/strategies/direction.cpp
    image_from_string_src
: $(TEST_DEPENDENCIES) ;

unit-test test_hbar :
    tests/strategies/test_hbar.cpp
    src/ppocr/strategies/hbar.cpp
    image_from_string_src
    src/ppocr/strategies/utils/basic_proportionality.cpp
: $(TEST_DEPENDENCIES) ;

unit-test test_hdirection :
    tests/strategies/test_hdirection.cpp
    src/ppocr/strategies/hdirection.cpp
    image_from_string_src
    src/ppocr/strategies/utils/basic_proportionality.cpp
: $(TEST_DEPENDENCIES) ;

unit-test test_hdirection2 :
    tests/strategies/test_hdirection2.cpp
    src/ppocr/strategies/hdirection2.cpp
    image_from_string_src
    src/ppocr/strategies/utils/basic_proportionality.cpp
: $(TEST_DEPENDENCIES) ;

unit-test test_hgravity :
    tests/strategies/test_hgravity.cpp
    src/ppocr/strategies/hgravity.cpp
    image_from_string_src
    src/ppocr/strategies/utils/basic_proportionality.cpp
: $(TEST_DEPENDENCIES) ;

unit-test test_hgravity2 :
    tests/strategies/test_hgravity2.cpp
    src/ppocr/strategies/hgravity2.cpp
    image_from_string_src
    src/ppocr/strategies/utils/basic_proportionality.cpp
: $(TEST_DEPENDENCIES) ;

unit-test test_zone :
    tests/strategies/test_zone.cpp
    src/ppocr/strategies/zone.cpp
    image_from_string_src
    src/ppocr/strategies/utils/basic_proportionality.cpp
: $(TEST_DEPENDENCIES) ;

unit-test test_trie :
    tests/container/test_trie.cpp
: $(TEST_DEPENDENCIES) ;

unit-test test_word_disambiguouser :
    tests/spell/test_word_disambiguouser.cpp
    dictionary
: $(TEST_DEPENDENCIES) ;

unit-test test_dictionary :
    tests/spell/test_dictionary.cpp
    dictionary
: $(TEST_DEPENDENCIES) ;


unit-test test_datas_loader :
    tests/loader2/test_datas_loader.cpp
    src/ppocr/strategies/hgravity.cpp
    src/ppocr/strategies/hdirection.cpp
    image
    image_from_string
: $(TEST_DEPENDENCIES) ;

unit-test test_glyphs_loader :
    tests/loader2/test_glyphs_loader.cpp
    loader2_image_io
    glyphs_loader
    coordinate
    image_compare
    image
    image_from_string
: $(TEST_DEPENDENCIES) ;

unit-test test_reindex :
    tests/utils/reindex.cpp
: $(TEST_DEPENDENCIES) ;

unit-test test_compute_image :
    tests/ocr2/test_compute_image.cpp
    src/ppocr/strategies/hdirection.cpp
    src/ppocr/ocr2/data_indexes_by_words.cpp
    coordinate
    image
    image_from_string
: $(TEST_DEPENDENCIES) ;

unit-test test_best_baseline :
    tests/filters/test_best_baseline.cpp
: $(TEST_DEPENDENCIES) ;


actions run-ocr2-test {
    rm -f $(<)
    $(>) | grep ' ## result: пpимeчaниe - Bloc-notes' && touch $(<)
}

make test_ocr2_extract_text :
    ocr2_extract_text
    ./resources/glyphs/normalized-glyphs-latin-cyrillic.txt
    ./resources/datas/latin-cyrillic.txt
    tests/cyrillic.negate.pnm
    ./resources/words_lines-latin-cyrillic.txt
    : run-ocr2-test : ;

# run ocr2_extract_text :
#     ./resources/glyphs/normalized-glyphs-latin-cyrillic.txt
#     ./resources/datas/latin-cyrillic.txt
#     /tmp/negate-35.pnm
#     ./resources/words_lines-latin-cyrillic.txt
# : : : test_ocr2_extract_text : run-ocr2-test ;


# make-test test_ocr2_extract_text :
#     ocr2_extract_text
#     :
#     run-ocr2-test
#     ./resources/glyphs/normalized-glyphs-latin-cyrillic.txt
#     ./resources/datas/latin-cyrillic.txt
#     /tmp/negate-35.pnm
#     ./resources/words_lines-latin-cyrillic.txt : ;
#
# rule run-test ( test-name : requirements * )
# {
#     import testing ;
#     import python ;
#     testing.make-test run-ocr2-test : $(test-name) : $(requirements) : $(test-name) ;
# }
#
# run-test test_ocr2_extract_text : <dependency>ocr2_extract_text ;


# run test_ocr2_extract_text :
#
#     : ;

## }
