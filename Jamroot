import os ;

# below feature rule come from http://www.boost.org/doc/tools/build/doc/html/bbv2/extending/features.html

path-constant TOP : . ;

project ppocr
    : requirements
    <include>src
    <include>src/ocr
#    <toolset>gcc:<cxxflags>-Wno-cpp
    <cxxflags>-Wno-unused-but-set-variable

    <cxxflags>-finline-functions
    <toolset>gcc:<cxxflags>-funswitch-loops
    <toolset>gcc:<cxxflags>-fpredictive-commoning
    <toolset>gcc:<cxxflags>-fgcse-after-reload
    <toolset>gcc:<cxxflags>-ftree-vectorize
    <toolset>gcc:<cxxflags>-fvect-cost-model
    #<cxxflags>-ftree-partial-pre
    <cxxflags>-std=c++11
   <cxxflags>-pedantic
#    <cxxflags>-Wconversion
    <cxxflags>-Wvla
    <cxxflags>-Wstrict-aliasing=2
   <cxxflags>-Wold-style-cast
#    <cxxflags>-Wlong-long
    <cxxflags>-O3
    <variant>debug:<cxxflags>-g
#     <variant>release:<cxxflags>-march=native
    <cxxflags>-Wuninitialized
    <cxxflags>-Wnon-virtual-dtor
    <cxxflags>-Wall
    <cxxflags>-Wextra
    <cxxflags>-Wno-unused-parameter
    <cxxflags>-Wno-long-long
    <cxxflags>-Wtype-limits
    <cxxflags>-Wundef
    <cxxflags>-Wcast-align
    <cxxflags>-Wchar-subscripts
#     <cxxflags>-Wformat
#     <cxxflags>-Wformat=2
#     <cxxflags>-Wformat-security
#     <cxxflags>-Wmissing-format-attribute
#    <cxxflags>-Werror-implicit-function-declaration
    <cxxflags>-Wsequence-point
    <cxxflags>-Wreturn-type
    <cxxflags>-Wfloat-equal
#     <cxxflags>-Wshadow
    <cxxflags>-Wpointer-arith
    <cxxflags>-Wsign-compare
#     <cxxflags>-Wmissing-declarations
    <cxxflags>-Wpacked
    <cxxflags>-Wredundant-decls
#     <cxxflags>-Winline
    <cxxflags>-Winit-self
    <cxxflags>-Wcast-qual
    <cxxflags>-Woverloaded-virtual
    <cxxflags>-Wunused-variable

#     <toolset>gcc:<cxxflags>-Wdouble-promotion
    <toolset>gcc:<cxxflags>-Wmaybe-uninitialized

#     <toolset>clang:<cxxflags>-Wno-mismatched-tags
#    <toolset>clang:<cxxflags>-Wno-overloaded-virtual
#     <toolset>clang:<cxxflags>-Wno-char-subscripts
#     <toolset>clang:<cxxflags>-Wno-array-bounds
#     <toolset>clang:<cxxflags>-Wno-unused-variable
#     <toolset>clang:<cxxflags>-Wno-unused-private-field

#     <define>_FILE_OFFSET_BITS=64
#     <define>_LARGEFILE64_SOURCE
#
#     <define>__STDC_FORMAT_MACROS

    : default-build release
;

#lib libboost_unit_test : : <name>boost_unit_test_framework-mt <link>shared ;
lib libboost_unit_test : : <name>boost_unit_test_framework <link>shared ;

#lib dl : : <name>dl <link>shared ;
#lib pthread : : <name>pthread <link>shared ;

obj coordinate      : src/image/coordinate.cpp ;
obj box             : src/box_char/box.cpp ;
obj image           : src/image/image.cpp ;
obj image_from_file : src/image/image_from_file.cpp ;
obj image_from_string : src/image/image_from_string.cpp ;
obj definition      : src/factory/definition.cpp ;

#exe test_image : tests/test_image.cpp src/image/image.cpp src/image/image_from_file.cpp libboost_unit_test : ;

exe extract_text2 :
    src/extract_text2.cpp
    src/filters/line.cpp
    src/box_char/box.cpp
    src/box_char/make_box_character.cpp
    src/factory/data_loader.cpp
    src/factory/definition.cpp
    src/factory/registry.cpp
    src/image/coordinate.cpp
    src/image/image.cpp
    src/image/image_from_file.cpp
    src/image/image_from_string.cpp
    src/strategies/agravity.cpp
    src/strategies/alternation.cpp
    src/strategies/compass.cpp
    src/strategies/dcompass.cpp
    src/strategies/direction.cpp
    src/strategies/dvdirection2.cpp
    src/strategies/dvdirection.cpp
    src/strategies/dvgravity2.cpp
    src/strategies/dvgravity.cpp
    src/strategies/gravity2.cpp
    src/strategies/gravity.cpp
    src/strategies/hdirection2.cpp
    src/strategies/hdirection.cpp
    src/strategies/hgravity2.cpp
    src/strategies/hgravity.cpp
    src/strategies/loop.cpp
    src/strategies/proportionality.cpp
    src/strategies/proportionality_zone.cpp
    src/strategies/utils/basic_proportionality.cpp
    src/utils/image_compare.cpp
    src/utils/unique_sort_definition.cpp
: ;

exe learning2 :
    src/learning2.cpp
    src/filters/line.cpp
    src/box_char/box.cpp
    src/box_char/make_box_character.cpp
    src/factory/data_loader.cpp
    src/factory/definition.cpp
    src/factory/registry.cpp
    src/image/coordinate.cpp
    src/image/image.cpp
    src/image/image_from_file.cpp
    src/image/image_from_string.cpp
    src/strategies/agravity.cpp
    src/strategies/alternation.cpp
    src/strategies/compass.cpp
    src/strategies/dcompass.cpp
    src/strategies/direction.cpp
    src/strategies/dvdirection2.cpp
    src/strategies/dvdirection.cpp
    src/strategies/dvgravity2.cpp
    src/strategies/dvgravity.cpp
    src/strategies/gravity2.cpp
    src/strategies/gravity.cpp
    src/strategies/hdirection2.cpp
    src/strategies/hdirection.cpp
    src/strategies/hgravity2.cpp
    src/strategies/hgravity.cpp
    src/strategies/loop.cpp
    src/strategies/proportionality.cpp
    src/strategies/proportionality_zone.cpp
    src/strategies/utils/basic_proportionality.cpp
    src/utils/image_compare.cpp
    src/utils/unique_sort_definition.cpp
: ;

#
# Unit Tests
#

import testing ;

unit-test test_image :
    tests/test_image.cpp
    src/image/image.cpp
    src/image/image_from_file.cpp
    libboost_unit_test : ;

unit-test test_line :
    image image_from_string definition coordinate box
    src/factory/data_loader.cpp
    tests/test_line.cpp
    src/filters/line.cpp
    libboost_unit_test : ;

unit-test test_make_box_character :
    tests/test_make_box_character.cpp
    src/box_char/make_box_character.cpp
    src/image/image.cpp src/image/image_from_file.cpp
    libboost_unit_test : ;

unit-test test_gravity :
    tests/strategies/test_gravity.cpp
    src/strategies/gravity.cpp
    src/image/image.cpp src/image/image_from_string.cpp
    libboost_unit_test : ;

unit-test test_gravity2 :
    tests/strategies/test_gravity2.cpp
    src/strategies/gravity2.cpp
    src/image/image.cpp src/image/image_from_string.cpp
    libboost_unit_test : ;

unit-test test_proportionality :
    tests/strategies/test_proportionality.cpp
    src/strategies/proportionality.cpp
    src/image/image.cpp src/image/image_from_string.cpp
    src/strategies/utils/basic_proportionality.cpp
    libboost_unit_test : ;


unit-test test_agravity :
    tests/strategies/test_agravity.cpp
    src/strategies/agravity.cpp
    src/image/image.cpp src/image/image_from_string.cpp
    libboost_unit_test : ;

unit-test test_alternation :
    tests/strategies/test_alternation.cpp
    src/strategies/alternation.cpp
    src/image/image.cpp src/image/image_from_string.cpp
    libboost_unit_test : ;

unit-test test_dcompass :
    tests/strategies/test_dcompass.cpp
    src/strategies/dcompass.cpp
    src/image/image.cpp src/image/image_from_string.cpp
    libboost_unit_test : ;

unit-test test_direction :
    tests/strategies/test_direction.cpp
    src/strategies/direction.cpp
    src/image/image.cpp src/image/image_from_string.cpp
    libboost_unit_test : ;

unit-test test_hdirection :
    tests/strategies/test_hdirection.cpp
    src/strategies/hdirection.cpp
    src/image/image.cpp src/image/image_from_string.cpp
    src/strategies/utils/basic_proportionality.cpp
    libboost_unit_test : ;

unit-test test_hdirection2 :
    tests/strategies/test_hdirection2.cpp
    src/strategies/hdirection2.cpp
    src/image/image.cpp src/image/image_from_string.cpp
    src/strategies/utils/basic_proportionality.cpp
    libboost_unit_test : ;

unit-test test_hgravity :
    tests/strategies/test_hgravity.cpp
    src/strategies/hgravity.cpp
    src/image/image.cpp src/image/image_from_string.cpp
    src/strategies/utils/basic_proportionality.cpp
    libboost_unit_test : ;

unit-test test_hgravity2 :
    tests/strategies/test_hgravity2.cpp
    src/strategies/hgravity2.cpp
    src/image/image.cpp src/image/image_from_string.cpp
    src/strategies/utils/basic_proportionality.cpp
    libboost_unit_test : ;

unit-test test_loop :
    tests/strategies/test_loop.cpp
    src/strategies/loop.cpp
    src/image/image.cpp src/image/image_from_string.cpp
    src/strategies/utils/basic_proportionality.cpp
    libboost_unit_test : ;

#unit-test test_new_ocr : tests/test_test_new_ocr.cpp cryptofile libboost_unit_test png acodec aformat avutil swscale openssl crypto snappy pthread dl z ocr : ;

